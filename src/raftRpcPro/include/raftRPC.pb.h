// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raftRPC.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_raftRPC_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_raftRPC_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_raftRPC_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_raftRPC_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_raftRPC_2eproto;
namespace raftRpcProctoc {
class AppendEntriesArgs;
struct AppendEntriesArgsDefaultTypeInternal;
extern AppendEntriesArgsDefaultTypeInternal _AppendEntriesArgs_default_instance_;
class AppendEntriesReply;
struct AppendEntriesReplyDefaultTypeInternal;
extern AppendEntriesReplyDefaultTypeInternal _AppendEntriesReply_default_instance_;
class InstallSnapshotRequest;
struct InstallSnapshotRequestDefaultTypeInternal;
extern InstallSnapshotRequestDefaultTypeInternal _InstallSnapshotRequest_default_instance_;
class InstallSnapshotResponse;
struct InstallSnapshotResponseDefaultTypeInternal;
extern InstallSnapshotResponseDefaultTypeInternal _InstallSnapshotResponse_default_instance_;
class LogEntry;
struct LogEntryDefaultTypeInternal;
extern LogEntryDefaultTypeInternal _LogEntry_default_instance_;
class RequestVoteArgs;
struct RequestVoteArgsDefaultTypeInternal;
extern RequestVoteArgsDefaultTypeInternal _RequestVoteArgs_default_instance_;
class RequestVoteReply;
struct RequestVoteReplyDefaultTypeInternal;
extern RequestVoteReplyDefaultTypeInternal _RequestVoteReply_default_instance_;
}  // namespace raftRpcProctoc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace raftRpcProctoc {

// ===================================================================


// -------------------------------------------------------------------

class RequestVoteReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raftRpcProctoc.RequestVoteReply) */ {
 public:
  inline RequestVoteReply() : RequestVoteReply(nullptr) {}
  ~RequestVoteReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RequestVoteReply(::google::protobuf::internal::ConstantInitialized);

  inline RequestVoteReply(const RequestVoteReply& from)
      : RequestVoteReply(nullptr, from) {}
  RequestVoteReply(RequestVoteReply&& from) noexcept
    : RequestVoteReply() {
    *this = ::std::move(from);
  }

  inline RequestVoteReply& operator=(const RequestVoteReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestVoteReply& operator=(RequestVoteReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestVoteReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestVoteReply* internal_default_instance() {
    return reinterpret_cast<const RequestVoteReply*>(
               &_RequestVoteReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RequestVoteReply& a, RequestVoteReply& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestVoteReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestVoteReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestVoteReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RequestVoteReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestVoteReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RequestVoteReply& from) {
    RequestVoteReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestVoteReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "raftRpcProctoc.RequestVoteReply";
  }
  protected:
  explicit RequestVoteReply(::google::protobuf::Arena* arena);
  RequestVoteReply(::google::protobuf::Arena* arena, const RequestVoteReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTermFieldNumber = 1,
    kVoteGrantedFieldNumber = 2,
    kVoteStateFieldNumber = 3,
  };
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // bool VoteGranted = 2;
  void clear_votegranted() ;
  bool votegranted() const;
  void set_votegranted(bool value);

  private:
  bool _internal_votegranted() const;
  void _internal_set_votegranted(bool value);

  public:
  // int32 VoteState = 3;
  void clear_votestate() ;
  ::int32_t votestate() const;
  void set_votestate(::int32_t value);

  private:
  ::int32_t _internal_votestate() const;
  void _internal_set_votestate(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:raftRpcProctoc.RequestVoteReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t term_;
    bool votegranted_;
    ::int32_t votestate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftRPC_2eproto;
};// -------------------------------------------------------------------

class RequestVoteArgs final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raftRpcProctoc.RequestVoteArgs) */ {
 public:
  inline RequestVoteArgs() : RequestVoteArgs(nullptr) {}
  ~RequestVoteArgs() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RequestVoteArgs(::google::protobuf::internal::ConstantInitialized);

  inline RequestVoteArgs(const RequestVoteArgs& from)
      : RequestVoteArgs(nullptr, from) {}
  RequestVoteArgs(RequestVoteArgs&& from) noexcept
    : RequestVoteArgs() {
    *this = ::std::move(from);
  }

  inline RequestVoteArgs& operator=(const RequestVoteArgs& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestVoteArgs& operator=(RequestVoteArgs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestVoteArgs& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestVoteArgs* internal_default_instance() {
    return reinterpret_cast<const RequestVoteArgs*>(
               &_RequestVoteArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RequestVoteArgs& a, RequestVoteArgs& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestVoteArgs* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestVoteArgs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestVoteArgs* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RequestVoteArgs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestVoteArgs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RequestVoteArgs& from) {
    RequestVoteArgs::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestVoteArgs* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "raftRpcProctoc.RequestVoteArgs";
  }
  protected:
  explicit RequestVoteArgs(::google::protobuf::Arena* arena);
  RequestVoteArgs(::google::protobuf::Arena* arena, const RequestVoteArgs& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTermFieldNumber = 1,
    kCandidateIdFieldNumber = 2,
    kLastLogIndexFieldNumber = 3,
    kLastLogTermFieldNumber = 4,
  };
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 CandidateId = 2;
  void clear_candidateid() ;
  ::int32_t candidateid() const;
  void set_candidateid(::int32_t value);

  private:
  ::int32_t _internal_candidateid() const;
  void _internal_set_candidateid(::int32_t value);

  public:
  // int32 LastLogIndex = 3;
  void clear_lastlogindex() ;
  ::int32_t lastlogindex() const;
  void set_lastlogindex(::int32_t value);

  private:
  ::int32_t _internal_lastlogindex() const;
  void _internal_set_lastlogindex(::int32_t value);

  public:
  // int32 LastLogTerm = 4;
  void clear_lastlogterm() ;
  ::int32_t lastlogterm() const;
  void set_lastlogterm(::int32_t value);

  private:
  ::int32_t _internal_lastlogterm() const;
  void _internal_set_lastlogterm(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:raftRpcProctoc.RequestVoteArgs)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t term_;
    ::int32_t candidateid_;
    ::int32_t lastlogindex_;
    ::int32_t lastlogterm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftRPC_2eproto;
};// -------------------------------------------------------------------

class LogEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raftRpcProctoc.LogEntry) */ {
 public:
  inline LogEntry() : LogEntry(nullptr) {}
  ~LogEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LogEntry(::google::protobuf::internal::ConstantInitialized);

  inline LogEntry(const LogEntry& from)
      : LogEntry(nullptr, from) {}
  LogEntry(LogEntry&& from) noexcept
    : LogEntry() {
    *this = ::std::move(from);
  }

  inline LogEntry& operator=(const LogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogEntry& operator=(LogEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogEntry* internal_default_instance() {
    return reinterpret_cast<const LogEntry*>(
               &_LogEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LogEntry& a, LogEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(LogEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LogEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LogEntry& from) {
    LogEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LogEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "raftRpcProctoc.LogEntry";
  }
  protected:
  explicit LogEntry(::google::protobuf::Arena* arena);
  LogEntry(::google::protobuf::Arena* arena, const LogEntry& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandFieldNumber = 1,
    kLogTermFieldNumber = 2,
    kLogIndexFieldNumber = 3,
  };
  // bytes Command = 1;
  void clear_command() ;
  const std::string& command() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_command(Arg_&& arg, Args_... args);
  std::string* mutable_command();
  PROTOBUF_NODISCARD std::string* release_command();
  void set_allocated_command(std::string* value);

  private:
  const std::string& _internal_command() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_command(
      const std::string& value);
  std::string* _internal_mutable_command();

  public:
  // int32 LogTerm = 2;
  void clear_logterm() ;
  ::int32_t logterm() const;
  void set_logterm(::int32_t value);

  private:
  ::int32_t _internal_logterm() const;
  void _internal_set_logterm(::int32_t value);

  public:
  // int32 LogIndex = 3;
  void clear_logindex() ;
  ::int32_t logindex() const;
  void set_logindex(::int32_t value);

  private:
  ::int32_t _internal_logindex() const;
  void _internal_set_logindex(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:raftRpcProctoc.LogEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr command_;
    ::int32_t logterm_;
    ::int32_t logindex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftRPC_2eproto;
};// -------------------------------------------------------------------

class InstallSnapshotResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raftRpcProctoc.InstallSnapshotResponse) */ {
 public:
  inline InstallSnapshotResponse() : InstallSnapshotResponse(nullptr) {}
  ~InstallSnapshotResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InstallSnapshotResponse(::google::protobuf::internal::ConstantInitialized);

  inline InstallSnapshotResponse(const InstallSnapshotResponse& from)
      : InstallSnapshotResponse(nullptr, from) {}
  InstallSnapshotResponse(InstallSnapshotResponse&& from) noexcept
    : InstallSnapshotResponse() {
    *this = ::std::move(from);
  }

  inline InstallSnapshotResponse& operator=(const InstallSnapshotResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstallSnapshotResponse& operator=(InstallSnapshotResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstallSnapshotResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const InstallSnapshotResponse* internal_default_instance() {
    return reinterpret_cast<const InstallSnapshotResponse*>(
               &_InstallSnapshotResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(InstallSnapshotResponse& a, InstallSnapshotResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(InstallSnapshotResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstallSnapshotResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstallSnapshotResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InstallSnapshotResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InstallSnapshotResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InstallSnapshotResponse& from) {
    InstallSnapshotResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InstallSnapshotResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "raftRpcProctoc.InstallSnapshotResponse";
  }
  protected:
  explicit InstallSnapshotResponse(::google::protobuf::Arena* arena);
  InstallSnapshotResponse(::google::protobuf::Arena* arena, const InstallSnapshotResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTermFieldNumber = 1,
  };
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:raftRpcProctoc.InstallSnapshotResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t term_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftRPC_2eproto;
};// -------------------------------------------------------------------

class InstallSnapshotRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raftRpcProctoc.InstallSnapshotRequest) */ {
 public:
  inline InstallSnapshotRequest() : InstallSnapshotRequest(nullptr) {}
  ~InstallSnapshotRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InstallSnapshotRequest(::google::protobuf::internal::ConstantInitialized);

  inline InstallSnapshotRequest(const InstallSnapshotRequest& from)
      : InstallSnapshotRequest(nullptr, from) {}
  InstallSnapshotRequest(InstallSnapshotRequest&& from) noexcept
    : InstallSnapshotRequest() {
    *this = ::std::move(from);
  }

  inline InstallSnapshotRequest& operator=(const InstallSnapshotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstallSnapshotRequest& operator=(InstallSnapshotRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstallSnapshotRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InstallSnapshotRequest* internal_default_instance() {
    return reinterpret_cast<const InstallSnapshotRequest*>(
               &_InstallSnapshotRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(InstallSnapshotRequest& a, InstallSnapshotRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InstallSnapshotRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstallSnapshotRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstallSnapshotRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InstallSnapshotRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InstallSnapshotRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InstallSnapshotRequest& from) {
    InstallSnapshotRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InstallSnapshotRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "raftRpcProctoc.InstallSnapshotRequest";
  }
  protected:
  explicit InstallSnapshotRequest(::google::protobuf::Arena* arena);
  InstallSnapshotRequest(::google::protobuf::Arena* arena, const InstallSnapshotRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 5,
    kLeaderIdFieldNumber = 1,
    kTermFieldNumber = 2,
    kLastSnapShotIncludeIndexFieldNumber = 3,
    kLastSnapShotIncludeTermFieldNumber = 4,
  };
  // bytes Data = 5;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int32 LeaderId = 1;
  void clear_leaderid() ;
  ::int32_t leaderid() const;
  void set_leaderid(::int32_t value);

  private:
  ::int32_t _internal_leaderid() const;
  void _internal_set_leaderid(::int32_t value);

  public:
  // int32 Term = 2;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 LastSnapShotIncludeIndex = 3;
  void clear_lastsnapshotincludeindex() ;
  ::int32_t lastsnapshotincludeindex() const;
  void set_lastsnapshotincludeindex(::int32_t value);

  private:
  ::int32_t _internal_lastsnapshotincludeindex() const;
  void _internal_set_lastsnapshotincludeindex(::int32_t value);

  public:
  // int32 LastSnapShotIncludeTerm = 4;
  void clear_lastsnapshotincludeterm() ;
  ::int32_t lastsnapshotincludeterm() const;
  void set_lastsnapshotincludeterm(::int32_t value);

  private:
  ::int32_t _internal_lastsnapshotincludeterm() const;
  void _internal_set_lastsnapshotincludeterm(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:raftRpcProctoc.InstallSnapshotRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t leaderid_;
    ::int32_t term_;
    ::int32_t lastsnapshotincludeindex_;
    ::int32_t lastsnapshotincludeterm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftRPC_2eproto;
};// -------------------------------------------------------------------

class AppendEntriesReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raftRpcProctoc.AppendEntriesReply) */ {
 public:
  inline AppendEntriesReply() : AppendEntriesReply(nullptr) {}
  ~AppendEntriesReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AppendEntriesReply(::google::protobuf::internal::ConstantInitialized);

  inline AppendEntriesReply(const AppendEntriesReply& from)
      : AppendEntriesReply(nullptr, from) {}
  AppendEntriesReply(AppendEntriesReply&& from) noexcept
    : AppendEntriesReply() {
    *this = ::std::move(from);
  }

  inline AppendEntriesReply& operator=(const AppendEntriesReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppendEntriesReply& operator=(AppendEntriesReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppendEntriesReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppendEntriesReply* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesReply*>(
               &_AppendEntriesReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AppendEntriesReply& a, AppendEntriesReply& b) {
    a.Swap(&b);
  }
  inline void Swap(AppendEntriesReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppendEntriesReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppendEntriesReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AppendEntriesReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppendEntriesReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AppendEntriesReply& from) {
    AppendEntriesReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AppendEntriesReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "raftRpcProctoc.AppendEntriesReply";
  }
  protected:
  explicit AppendEntriesReply(::google::protobuf::Arena* arena);
  AppendEntriesReply(::google::protobuf::Arena* arena, const AppendEntriesReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTermFieldNumber = 1,
    kSuccessFieldNumber = 2,
    kUpdateNextIndexFieldNumber = 3,
    kAppStateFieldNumber = 4,
  };
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // bool Success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // int32 UpdateNextIndex = 3;
  void clear_updatenextindex() ;
  ::int32_t updatenextindex() const;
  void set_updatenextindex(::int32_t value);

  private:
  ::int32_t _internal_updatenextindex() const;
  void _internal_set_updatenextindex(::int32_t value);

  public:
  // int32 AppState = 4;
  void clear_appstate() ;
  ::int32_t appstate() const;
  void set_appstate(::int32_t value);

  private:
  ::int32_t _internal_appstate() const;
  void _internal_set_appstate(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:raftRpcProctoc.AppendEntriesReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t term_;
    bool success_;
    ::int32_t updatenextindex_;
    ::int32_t appstate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftRPC_2eproto;
};// -------------------------------------------------------------------

class AppendEntriesArgs final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raftRpcProctoc.AppendEntriesArgs) */ {
 public:
  inline AppendEntriesArgs() : AppendEntriesArgs(nullptr) {}
  ~AppendEntriesArgs() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AppendEntriesArgs(::google::protobuf::internal::ConstantInitialized);

  inline AppendEntriesArgs(const AppendEntriesArgs& from)
      : AppendEntriesArgs(nullptr, from) {}
  AppendEntriesArgs(AppendEntriesArgs&& from) noexcept
    : AppendEntriesArgs() {
    *this = ::std::move(from);
  }

  inline AppendEntriesArgs& operator=(const AppendEntriesArgs& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppendEntriesArgs& operator=(AppendEntriesArgs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppendEntriesArgs& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppendEntriesArgs* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesArgs*>(
               &_AppendEntriesArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AppendEntriesArgs& a, AppendEntriesArgs& b) {
    a.Swap(&b);
  }
  inline void Swap(AppendEntriesArgs* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppendEntriesArgs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppendEntriesArgs* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AppendEntriesArgs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppendEntriesArgs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AppendEntriesArgs& from) {
    AppendEntriesArgs::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AppendEntriesArgs* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "raftRpcProctoc.AppendEntriesArgs";
  }
  protected:
  explicit AppendEntriesArgs(::google::protobuf::Arena* arena);
  AppendEntriesArgs(::google::protobuf::Arena* arena, const AppendEntriesArgs& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 5,
    kTermFieldNumber = 1,
    kLeaderIdFieldNumber = 2,
    kPrevLogIndexFieldNumber = 3,
    kPrevLogTermFieldNumber = 4,
    kLeaderCommitFieldNumber = 6,
  };
  // repeated .raftRpcProctoc.LogEntry Entries = 5;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::raftRpcProctoc::LogEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::raftRpcProctoc::LogEntry >*
      mutable_entries();
  private:
  const ::google::protobuf::RepeatedPtrField<::raftRpcProctoc::LogEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::raftRpcProctoc::LogEntry>* _internal_mutable_entries();
  public:
  const ::raftRpcProctoc::LogEntry& entries(int index) const;
  ::raftRpcProctoc::LogEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::raftRpcProctoc::LogEntry >&
      entries() const;
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 LeaderId = 2;
  void clear_leaderid() ;
  ::int32_t leaderid() const;
  void set_leaderid(::int32_t value);

  private:
  ::int32_t _internal_leaderid() const;
  void _internal_set_leaderid(::int32_t value);

  public:
  // int32 PrevLogIndex = 3;
  void clear_prevlogindex() ;
  ::int32_t prevlogindex() const;
  void set_prevlogindex(::int32_t value);

  private:
  ::int32_t _internal_prevlogindex() const;
  void _internal_set_prevlogindex(::int32_t value);

  public:
  // int32 PrevLogTerm = 4;
  void clear_prevlogterm() ;
  ::int32_t prevlogterm() const;
  void set_prevlogterm(::int32_t value);

  private:
  ::int32_t _internal_prevlogterm() const;
  void _internal_set_prevlogterm(::int32_t value);

  public:
  // int32 LeaderCommit = 6;
  void clear_leadercommit() ;
  ::int32_t leadercommit() const;
  void set_leadercommit(::int32_t value);

  private:
  ::int32_t _internal_leadercommit() const;
  void _internal_set_leadercommit(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:raftRpcProctoc.AppendEntriesArgs)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::raftRpcProctoc::LogEntry > entries_;
    ::int32_t term_;
    ::int32_t leaderid_;
    ::int32_t prevlogindex_;
    ::int32_t prevlogterm_;
    ::int32_t leadercommit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftRPC_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LogEntry

// bytes Command = 1;
inline void LogEntry::clear_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.command_.ClearToEmpty();
}
inline const std::string& LogEntry::command() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.LogEntry.Command)
  return _internal_command();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_command(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:raftRpcProctoc.LogEntry.Command)
}
inline std::string* LogEntry::mutable_command() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_command();
  // @@protoc_insertion_point(field_mutable:raftRpcProctoc.LogEntry.Command)
  return _s;
}
inline const std::string& LogEntry::_internal_command() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.command_.Get();
}
inline void LogEntry::_internal_set_command(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.command_.Mutable( GetArena());
}
inline std::string* LogEntry::release_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:raftRpcProctoc.LogEntry.Command)
  return _impl_.command_.Release();
}
inline void LogEntry::set_allocated_command(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.command_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.command_.IsDefault()) {
          _impl_.command_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:raftRpcProctoc.LogEntry.Command)
}

// int32 LogTerm = 2;
inline void LogEntry::clear_logterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logterm_ = 0;
}
inline ::int32_t LogEntry::logterm() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.LogEntry.LogTerm)
  return _internal_logterm();
}
inline void LogEntry::set_logterm(::int32_t value) {
  _internal_set_logterm(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.LogEntry.LogTerm)
}
inline ::int32_t LogEntry::_internal_logterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.logterm_;
}
inline void LogEntry::_internal_set_logterm(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.logterm_ = value;
}

// int32 LogIndex = 3;
inline void LogEntry::clear_logindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logindex_ = 0;
}
inline ::int32_t LogEntry::logindex() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.LogEntry.LogIndex)
  return _internal_logindex();
}
inline void LogEntry::set_logindex(::int32_t value) {
  _internal_set_logindex(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.LogEntry.LogIndex)
}
inline ::int32_t LogEntry::_internal_logindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.logindex_;
}
inline void LogEntry::_internal_set_logindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.logindex_ = value;
}

// -------------------------------------------------------------------

// AppendEntriesArgs

// int32 Term = 1;
inline void AppendEntriesArgs::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t AppendEntriesArgs::term() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesArgs.Term)
  return _internal_term();
}
inline void AppendEntriesArgs::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.AppendEntriesArgs.Term)
}
inline ::int32_t AppendEntriesArgs::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void AppendEntriesArgs::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.term_ = value;
}

// int32 LeaderId = 2;
inline void AppendEntriesArgs::clear_leaderid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = 0;
}
inline ::int32_t AppendEntriesArgs::leaderid() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesArgs.LeaderId)
  return _internal_leaderid();
}
inline void AppendEntriesArgs::set_leaderid(::int32_t value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.AppendEntriesArgs.LeaderId)
}
inline ::int32_t AppendEntriesArgs::_internal_leaderid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leaderid_;
}
inline void AppendEntriesArgs::_internal_set_leaderid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.leaderid_ = value;
}

// int32 PrevLogIndex = 3;
inline void AppendEntriesArgs::clear_prevlogindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogindex_ = 0;
}
inline ::int32_t AppendEntriesArgs::prevlogindex() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesArgs.PrevLogIndex)
  return _internal_prevlogindex();
}
inline void AppendEntriesArgs::set_prevlogindex(::int32_t value) {
  _internal_set_prevlogindex(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.AppendEntriesArgs.PrevLogIndex)
}
inline ::int32_t AppendEntriesArgs::_internal_prevlogindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prevlogindex_;
}
inline void AppendEntriesArgs::_internal_set_prevlogindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prevlogindex_ = value;
}

// int32 PrevLogTerm = 4;
inline void AppendEntriesArgs::clear_prevlogterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogterm_ = 0;
}
inline ::int32_t AppendEntriesArgs::prevlogterm() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesArgs.PrevLogTerm)
  return _internal_prevlogterm();
}
inline void AppendEntriesArgs::set_prevlogterm(::int32_t value) {
  _internal_set_prevlogterm(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.AppendEntriesArgs.PrevLogTerm)
}
inline ::int32_t AppendEntriesArgs::_internal_prevlogterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prevlogterm_;
}
inline void AppendEntriesArgs::_internal_set_prevlogterm(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prevlogterm_ = value;
}

// repeated .raftRpcProctoc.LogEntry Entries = 5;
inline int AppendEntriesArgs::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int AppendEntriesArgs::entries_size() const {
  return _internal_entries_size();
}
inline void AppendEntriesArgs::clear_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entries_.Clear();
}
inline ::raftRpcProctoc::LogEntry* AppendEntriesArgs::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:raftRpcProctoc.AppendEntriesArgs.Entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::raftRpcProctoc::LogEntry>* AppendEntriesArgs::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:raftRpcProctoc.AppendEntriesArgs.Entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_entries();
}
inline const ::raftRpcProctoc::LogEntry& AppendEntriesArgs::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesArgs.Entries)
  return _internal_entries().Get(index);
}
inline ::raftRpcProctoc::LogEntry* AppendEntriesArgs::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::raftRpcProctoc::LogEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:raftRpcProctoc.AppendEntriesArgs.Entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::raftRpcProctoc::LogEntry>& AppendEntriesArgs::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:raftRpcProctoc.AppendEntriesArgs.Entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::raftRpcProctoc::LogEntry>&
AppendEntriesArgs::_internal_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::raftRpcProctoc::LogEntry>*
AppendEntriesArgs::_internal_mutable_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.entries_;
}

// int32 LeaderCommit = 6;
inline void AppendEntriesArgs::clear_leadercommit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leadercommit_ = 0;
}
inline ::int32_t AppendEntriesArgs::leadercommit() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesArgs.LeaderCommit)
  return _internal_leadercommit();
}
inline void AppendEntriesArgs::set_leadercommit(::int32_t value) {
  _internal_set_leadercommit(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.AppendEntriesArgs.LeaderCommit)
}
inline ::int32_t AppendEntriesArgs::_internal_leadercommit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leadercommit_;
}
inline void AppendEntriesArgs::_internal_set_leadercommit(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.leadercommit_ = value;
}

// -------------------------------------------------------------------

// AppendEntriesReply

// int32 Term = 1;
inline void AppendEntriesReply::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t AppendEntriesReply::term() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesReply.Term)
  return _internal_term();
}
inline void AppendEntriesReply::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.AppendEntriesReply.Term)
}
inline ::int32_t AppendEntriesReply::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void AppendEntriesReply::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.term_ = value;
}

// bool Success = 2;
inline void AppendEntriesReply::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool AppendEntriesReply::success() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesReply.Success)
  return _internal_success();
}
inline void AppendEntriesReply::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.AppendEntriesReply.Success)
}
inline bool AppendEntriesReply::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void AppendEntriesReply::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.success_ = value;
}

// int32 UpdateNextIndex = 3;
inline void AppendEntriesReply::clear_updatenextindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.updatenextindex_ = 0;
}
inline ::int32_t AppendEntriesReply::updatenextindex() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesReply.UpdateNextIndex)
  return _internal_updatenextindex();
}
inline void AppendEntriesReply::set_updatenextindex(::int32_t value) {
  _internal_set_updatenextindex(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.AppendEntriesReply.UpdateNextIndex)
}
inline ::int32_t AppendEntriesReply::_internal_updatenextindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.updatenextindex_;
}
inline void AppendEntriesReply::_internal_set_updatenextindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.updatenextindex_ = value;
}

// int32 AppState = 4;
inline void AppendEntriesReply::clear_appstate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.appstate_ = 0;
}
inline ::int32_t AppendEntriesReply::appstate() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.AppendEntriesReply.AppState)
  return _internal_appstate();
}
inline void AppendEntriesReply::set_appstate(::int32_t value) {
  _internal_set_appstate(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.AppendEntriesReply.AppState)
}
inline ::int32_t AppendEntriesReply::_internal_appstate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.appstate_;
}
inline void AppendEntriesReply::_internal_set_appstate(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.appstate_ = value;
}

// -------------------------------------------------------------------

// RequestVoteArgs

// int32 Term = 1;
inline void RequestVoteArgs::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t RequestVoteArgs::term() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.RequestVoteArgs.Term)
  return _internal_term();
}
inline void RequestVoteArgs::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.RequestVoteArgs.Term)
}
inline ::int32_t RequestVoteArgs::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RequestVoteArgs::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.term_ = value;
}

// int32 CandidateId = 2;
inline void RequestVoteArgs::clear_candidateid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.candidateid_ = 0;
}
inline ::int32_t RequestVoteArgs::candidateid() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.RequestVoteArgs.CandidateId)
  return _internal_candidateid();
}
inline void RequestVoteArgs::set_candidateid(::int32_t value) {
  _internal_set_candidateid(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.RequestVoteArgs.CandidateId)
}
inline ::int32_t RequestVoteArgs::_internal_candidateid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.candidateid_;
}
inline void RequestVoteArgs::_internal_set_candidateid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.candidateid_ = value;
}

// int32 LastLogIndex = 3;
inline void RequestVoteArgs::clear_lastlogindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogindex_ = 0;
}
inline ::int32_t RequestVoteArgs::lastlogindex() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.RequestVoteArgs.LastLogIndex)
  return _internal_lastlogindex();
}
inline void RequestVoteArgs::set_lastlogindex(::int32_t value) {
  _internal_set_lastlogindex(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.RequestVoteArgs.LastLogIndex)
}
inline ::int32_t RequestVoteArgs::_internal_lastlogindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastlogindex_;
}
inline void RequestVoteArgs::_internal_set_lastlogindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lastlogindex_ = value;
}

// int32 LastLogTerm = 4;
inline void RequestVoteArgs::clear_lastlogterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogterm_ = 0;
}
inline ::int32_t RequestVoteArgs::lastlogterm() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.RequestVoteArgs.LastLogTerm)
  return _internal_lastlogterm();
}
inline void RequestVoteArgs::set_lastlogterm(::int32_t value) {
  _internal_set_lastlogterm(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.RequestVoteArgs.LastLogTerm)
}
inline ::int32_t RequestVoteArgs::_internal_lastlogterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastlogterm_;
}
inline void RequestVoteArgs::_internal_set_lastlogterm(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lastlogterm_ = value;
}

// -------------------------------------------------------------------

// RequestVoteReply

// int32 Term = 1;
inline void RequestVoteReply::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t RequestVoteReply::term() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.RequestVoteReply.Term)
  return _internal_term();
}
inline void RequestVoteReply::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.RequestVoteReply.Term)
}
inline ::int32_t RequestVoteReply::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RequestVoteReply::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.term_ = value;
}

// bool VoteGranted = 2;
inline void RequestVoteReply::clear_votegranted() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.votegranted_ = false;
}
inline bool RequestVoteReply::votegranted() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.RequestVoteReply.VoteGranted)
  return _internal_votegranted();
}
inline void RequestVoteReply::set_votegranted(bool value) {
  _internal_set_votegranted(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.RequestVoteReply.VoteGranted)
}
inline bool RequestVoteReply::_internal_votegranted() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.votegranted_;
}
inline void RequestVoteReply::_internal_set_votegranted(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.votegranted_ = value;
}

// int32 VoteState = 3;
inline void RequestVoteReply::clear_votestate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.votestate_ = 0;
}
inline ::int32_t RequestVoteReply::votestate() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.RequestVoteReply.VoteState)
  return _internal_votestate();
}
inline void RequestVoteReply::set_votestate(::int32_t value) {
  _internal_set_votestate(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.RequestVoteReply.VoteState)
}
inline ::int32_t RequestVoteReply::_internal_votestate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.votestate_;
}
inline void RequestVoteReply::_internal_set_votestate(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.votestate_ = value;
}

// -------------------------------------------------------------------

// InstallSnapshotRequest

// int32 LeaderId = 1;
inline void InstallSnapshotRequest::clear_leaderid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = 0;
}
inline ::int32_t InstallSnapshotRequest::leaderid() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.InstallSnapshotRequest.LeaderId)
  return _internal_leaderid();
}
inline void InstallSnapshotRequest::set_leaderid(::int32_t value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.InstallSnapshotRequest.LeaderId)
}
inline ::int32_t InstallSnapshotRequest::_internal_leaderid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leaderid_;
}
inline void InstallSnapshotRequest::_internal_set_leaderid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.leaderid_ = value;
}

// int32 Term = 2;
inline void InstallSnapshotRequest::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t InstallSnapshotRequest::term() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.InstallSnapshotRequest.Term)
  return _internal_term();
}
inline void InstallSnapshotRequest::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.InstallSnapshotRequest.Term)
}
inline ::int32_t InstallSnapshotRequest::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void InstallSnapshotRequest::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.term_ = value;
}

// int32 LastSnapShotIncludeIndex = 3;
inline void InstallSnapshotRequest::clear_lastsnapshotincludeindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastsnapshotincludeindex_ = 0;
}
inline ::int32_t InstallSnapshotRequest::lastsnapshotincludeindex() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.InstallSnapshotRequest.LastSnapShotIncludeIndex)
  return _internal_lastsnapshotincludeindex();
}
inline void InstallSnapshotRequest::set_lastsnapshotincludeindex(::int32_t value) {
  _internal_set_lastsnapshotincludeindex(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.InstallSnapshotRequest.LastSnapShotIncludeIndex)
}
inline ::int32_t InstallSnapshotRequest::_internal_lastsnapshotincludeindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastsnapshotincludeindex_;
}
inline void InstallSnapshotRequest::_internal_set_lastsnapshotincludeindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lastsnapshotincludeindex_ = value;
}

// int32 LastSnapShotIncludeTerm = 4;
inline void InstallSnapshotRequest::clear_lastsnapshotincludeterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastsnapshotincludeterm_ = 0;
}
inline ::int32_t InstallSnapshotRequest::lastsnapshotincludeterm() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.InstallSnapshotRequest.LastSnapShotIncludeTerm)
  return _internal_lastsnapshotincludeterm();
}
inline void InstallSnapshotRequest::set_lastsnapshotincludeterm(::int32_t value) {
  _internal_set_lastsnapshotincludeterm(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.InstallSnapshotRequest.LastSnapShotIncludeTerm)
}
inline ::int32_t InstallSnapshotRequest::_internal_lastsnapshotincludeterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastsnapshotincludeterm_;
}
inline void InstallSnapshotRequest::_internal_set_lastsnapshotincludeterm(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lastsnapshotincludeterm_ = value;
}

// bytes Data = 5;
inline void InstallSnapshotRequest::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InstallSnapshotRequest::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.InstallSnapshotRequest.Data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InstallSnapshotRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:raftRpcProctoc.InstallSnapshotRequest.Data)
}
inline std::string* InstallSnapshotRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:raftRpcProctoc.InstallSnapshotRequest.Data)
  return _s;
}
inline const std::string& InstallSnapshotRequest::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void InstallSnapshotRequest::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* InstallSnapshotRequest::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* InstallSnapshotRequest::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:raftRpcProctoc.InstallSnapshotRequest.Data)
  return _impl_.data_.Release();
}
inline void InstallSnapshotRequest::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:raftRpcProctoc.InstallSnapshotRequest.Data)
}

// -------------------------------------------------------------------

// InstallSnapshotResponse

// int32 Term = 1;
inline void InstallSnapshotResponse::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t InstallSnapshotResponse::term() const {
  // @@protoc_insertion_point(field_get:raftRpcProctoc.InstallSnapshotResponse.Term)
  return _internal_term();
}
inline void InstallSnapshotResponse::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:raftRpcProctoc.InstallSnapshotResponse.Term)
}
inline ::int32_t InstallSnapshotResponse::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void InstallSnapshotResponse::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.term_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace raftRpcProctoc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_raftRPC_2eproto_2epb_2eh
