// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kvServerRPC.proto

#include "kvServerRPC.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace raftKVRpcProctoc {

inline constexpr PutAppendReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : err_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PutAppendReply::PutAppendReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PutAppendReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutAppendReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutAppendReplyDefaultTypeInternal() {}
  union {
    PutAppendReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutAppendReplyDefaultTypeInternal _PutAppendReply_default_instance_;

inline constexpr PutAppendArgs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        clientid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requestid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PutAppendArgs::PutAppendArgs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PutAppendArgsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutAppendArgsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutAppendArgsDefaultTypeInternal() {}
  union {
    PutAppendArgs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutAppendArgsDefaultTypeInternal _PutAppendArgs_default_instance_;

inline constexpr GetReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : err_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetReply::GetReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetReplyDefaultTypeInternal() {}
  union {
    GetReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetReplyDefaultTypeInternal _GetReply_default_instance_;

inline constexpr GetArgs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        clientid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requestid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetArgs::GetArgs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetArgsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArgsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArgsDefaultTypeInternal() {}
  union {
    GetArgs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArgsDefaultTypeInternal _GetArgs_default_instance_;
}  // namespace raftKVRpcProctoc
static ::_pb::Metadata file_level_metadata_kvServerRPC_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_kvServerRPC_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kvServerRPC_2eproto = nullptr;
const ::uint32_t TableStruct_kvServerRPC_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::GetArgs, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::GetArgs, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::GetArgs, _impl_.clientid_),
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::GetArgs, _impl_.requestid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::GetReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::GetReply, _impl_.err_),
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::GetReply, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::PutAppendArgs, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::PutAppendArgs, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::PutAppendArgs, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::PutAppendArgs, _impl_.op_),
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::PutAppendArgs, _impl_.clientid_),
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::PutAppendArgs, _impl_.requestid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::PutAppendReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftKVRpcProctoc::PutAppendReply, _impl_.err_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::raftKVRpcProctoc::GetArgs)},
        {11, -1, -1, sizeof(::raftKVRpcProctoc::GetReply)},
        {21, -1, -1, sizeof(::raftKVRpcProctoc::PutAppendArgs)},
        {34, -1, -1, sizeof(::raftKVRpcProctoc::PutAppendReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::raftKVRpcProctoc::_GetArgs_default_instance_._instance,
    &::raftKVRpcProctoc::_GetReply_default_instance_._instance,
    &::raftKVRpcProctoc::_PutAppendArgs_default_instance_._instance,
    &::raftKVRpcProctoc::_PutAppendReply_default_instance_._instance,
};
const char descriptor_table_protodef_kvServerRPC_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021kvServerRPC.proto\022\020raftKVRpcProctoc\";\n"
    "\007GetArgs\022\013\n\003Key\030\001 \001(\014\022\020\n\010ClientId\030\002 \001(\014\022"
    "\021\n\tRequestId\030\003 \001(\005\"&\n\010GetReply\022\013\n\003Err\030\001 "
    "\001(\014\022\r\n\005Value\030\002 \001(\014\"\\\n\rPutAppendArgs\022\013\n\003K"
    "ey\030\001 \001(\014\022\r\n\005Value\030\002 \001(\014\022\n\n\002Op\030\003 \001(\014\022\020\n\010C"
    "lientId\030\004 \001(\014\022\021\n\tRequestId\030\005 \001(\005\"\035\n\016PutA"
    "ppendReply\022\013\n\003Err\030\001 \001(\0142\233\001\n\013kvServerRpc\022"
    "N\n\tPutAppend\022\037.raftKVRpcProctoc.PutAppen"
    "dArgs\032 .raftKVRpcProctoc.PutAppendReply\022"
    "<\n\003Get\022\031.raftKVRpcProctoc.GetArgs\032\032.raft"
    "KVRpcProctoc.GetReplyb\006proto3"
};
static ::absl::once_flag descriptor_table_kvServerRPC_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_kvServerRPC_2eproto = {
    false,
    false,
    429,
    descriptor_table_protodef_kvServerRPC_2eproto,
    "kvServerRPC.proto",
    &descriptor_table_kvServerRPC_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_kvServerRPC_2eproto::offsets,
    file_level_metadata_kvServerRPC_2eproto,
    file_level_enum_descriptors_kvServerRPC_2eproto,
    file_level_service_descriptors_kvServerRPC_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_kvServerRPC_2eproto_getter() {
  return &descriptor_table_kvServerRPC_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_kvServerRPC_2eproto(&descriptor_table_kvServerRPC_2eproto);
namespace raftKVRpcProctoc {
// ===================================================================

class GetArgs::_Internal {
 public:
};

GetArgs::GetArgs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftKVRpcProctoc.GetArgs)
}
inline PROTOBUF_NDEBUG_INLINE GetArgs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        clientid_(arena, from.clientid_),
        _cached_size_{0} {}

GetArgs::GetArgs(
    ::google::protobuf::Arena* arena,
    const GetArgs& from)
    : ::google::protobuf::Message(arena) {
  GetArgs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.requestid_ = from._impl_.requestid_;

  // @@protoc_insertion_point(copy_constructor:raftKVRpcProctoc.GetArgs)
}
inline PROTOBUF_NDEBUG_INLINE GetArgs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        clientid_(arena),
        _cached_size_{0} {}

inline void GetArgs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.requestid_ = {};
}
GetArgs::~GetArgs() {
  // @@protoc_insertion_point(destructor:raftKVRpcProctoc.GetArgs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetArgs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.clientid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:raftKVRpcProctoc.GetArgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.clientid_.ClearToEmpty();
  _impl_.requestid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetArgs::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> GetArgs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetArgs_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes Key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetArgs, _impl_.key_)}},
    // bytes ClientId = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetArgs, _impl_.clientid_)}},
    // int32 RequestId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetArgs, _impl_.requestid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetArgs, _impl_.requestid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes Key = 1;
    {PROTOBUF_FIELD_OFFSET(GetArgs, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes ClientId = 2;
    {PROTOBUF_FIELD_OFFSET(GetArgs, _impl_.clientid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 RequestId = 3;
    {PROTOBUF_FIELD_OFFSET(GetArgs, _impl_.requestid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetArgs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftKVRpcProctoc.GetArgs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes Key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes ClientId = 2;
  if (!this->_internal_clientid().empty()) {
    const std::string& _s = this->_internal_clientid();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // int32 RequestId = 3;
  if (this->_internal_requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_requestid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftKVRpcProctoc.GetArgs)
  return target;
}

::size_t GetArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftKVRpcProctoc.GetArgs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  // bytes ClientId = 2;
  if (!this->_internal_clientid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_clientid());
  }

  // int32 RequestId = 3;
  if (this->_internal_requestid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_requestid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetArgs::_class_data_ = {
    GetArgs::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetArgs::GetClassData() const {
  return &_class_data_;
}

void GetArgs::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetArgs*>(&to_msg);
  auto& from = static_cast<const GetArgs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftKVRpcProctoc.GetArgs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_clientid().empty()) {
    _this->_internal_set_clientid(from._internal_clientid());
  }
  if (from._internal_requestid() != 0) {
    _this->_internal_set_requestid(from._internal_requestid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetArgs::CopyFrom(const GetArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftKVRpcProctoc.GetArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetArgs::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetArgs::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetArgs::InternalSwap(GetArgs* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientid_, &other->_impl_.clientid_, arena);
        swap(_impl_.requestid_, other->_impl_.requestid_);
}

::google::protobuf::Metadata GetArgs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kvServerRPC_2eproto_getter, &descriptor_table_kvServerRPC_2eproto_once,
      file_level_metadata_kvServerRPC_2eproto[0]);
}
// ===================================================================

class GetReply::_Internal {
 public:
};

GetReply::GetReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftKVRpcProctoc.GetReply)
}
inline PROTOBUF_NDEBUG_INLINE GetReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : err_(arena, from.err_),
        value_(arena, from.value_),
        _cached_size_{0} {}

GetReply::GetReply(
    ::google::protobuf::Arena* arena,
    const GetReply& from)
    : ::google::protobuf::Message(arena) {
  GetReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:raftKVRpcProctoc.GetReply)
}
inline PROTOBUF_NDEBUG_INLINE GetReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : err_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void GetReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetReply::~GetReply() {
  // @@protoc_insertion_point(destructor:raftKVRpcProctoc.GetReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.err_.Destroy();
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:raftKVRpcProctoc.GetReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.err_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GetReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes Value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetReply, _impl_.value_)}},
    // bytes Err = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetReply, _impl_.err_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes Err = 1;
    {PROTOBUF_FIELD_OFFSET(GetReply, _impl_.err_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes Value = 2;
    {PROTOBUF_FIELD_OFFSET(GetReply, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftKVRpcProctoc.GetReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes Err = 1;
  if (!this->_internal_err().empty()) {
    const std::string& _s = this->_internal_err();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes Value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftKVRpcProctoc.GetReply)
  return target;
}

::size_t GetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftKVRpcProctoc.GetReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Err = 1;
  if (!this->_internal_err().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_err());
  }

  // bytes Value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetReply::_class_data_ = {
    GetReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetReply::GetClassData() const {
  return &_class_data_;
}

void GetReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetReply*>(&to_msg);
  auto& from = static_cast<const GetReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftKVRpcProctoc.GetReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_err().empty()) {
    _this->_internal_set_err(from._internal_err());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetReply::CopyFrom(const GetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftKVRpcProctoc.GetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetReply::InternalSwap(GetReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.err_, &other->_impl_.err_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata GetReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kvServerRPC_2eproto_getter, &descriptor_table_kvServerRPC_2eproto_once,
      file_level_metadata_kvServerRPC_2eproto[1]);
}
// ===================================================================

class PutAppendArgs::_Internal {
 public:
};

PutAppendArgs::PutAppendArgs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftKVRpcProctoc.PutAppendArgs)
}
inline PROTOBUF_NDEBUG_INLINE PutAppendArgs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        value_(arena, from.value_),
        op_(arena, from.op_),
        clientid_(arena, from.clientid_),
        _cached_size_{0} {}

PutAppendArgs::PutAppendArgs(
    ::google::protobuf::Arena* arena,
    const PutAppendArgs& from)
    : ::google::protobuf::Message(arena) {
  PutAppendArgs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.requestid_ = from._impl_.requestid_;

  // @@protoc_insertion_point(copy_constructor:raftKVRpcProctoc.PutAppendArgs)
}
inline PROTOBUF_NDEBUG_INLINE PutAppendArgs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        value_(arena),
        op_(arena),
        clientid_(arena),
        _cached_size_{0} {}

inline void PutAppendArgs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.requestid_ = {};
}
PutAppendArgs::~PutAppendArgs() {
  // @@protoc_insertion_point(destructor:raftKVRpcProctoc.PutAppendArgs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PutAppendArgs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
  _impl_.op_.Destroy();
  _impl_.clientid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PutAppendArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:raftKVRpcProctoc.PutAppendArgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.op_.ClearToEmpty();
  _impl_.clientid_.ClearToEmpty();
  _impl_.requestid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PutAppendArgs::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> PutAppendArgs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PutAppendArgs_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes Key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.key_)}},
    // bytes Value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.value_)}},
    // bytes Op = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.op_)}},
    // bytes ClientId = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.clientid_)}},
    // int32 RequestId = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PutAppendArgs, _impl_.requestid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.requestid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes Key = 1;
    {PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes Value = 2;
    {PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes Op = 3;
    {PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.op_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes ClientId = 4;
    {PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.clientid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 RequestId = 5;
    {PROTOBUF_FIELD_OFFSET(PutAppendArgs, _impl_.requestid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PutAppendArgs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftKVRpcProctoc.PutAppendArgs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes Key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes Value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bytes Op = 3;
  if (!this->_internal_op().empty()) {
    const std::string& _s = this->_internal_op();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // bytes ClientId = 4;
  if (!this->_internal_clientid().empty()) {
    const std::string& _s = this->_internal_clientid();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // int32 RequestId = 5;
  if (this->_internal_requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_requestid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftKVRpcProctoc.PutAppendArgs)
  return target;
}

::size_t PutAppendArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftKVRpcProctoc.PutAppendArgs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  // bytes Value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  // bytes Op = 3;
  if (!this->_internal_op().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_op());
  }

  // bytes ClientId = 4;
  if (!this->_internal_clientid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_clientid());
  }

  // int32 RequestId = 5;
  if (this->_internal_requestid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_requestid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PutAppendArgs::_class_data_ = {
    PutAppendArgs::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PutAppendArgs::GetClassData() const {
  return &_class_data_;
}

void PutAppendArgs::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PutAppendArgs*>(&to_msg);
  auto& from = static_cast<const PutAppendArgs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftKVRpcProctoc.PutAppendArgs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (!from._internal_op().empty()) {
    _this->_internal_set_op(from._internal_op());
  }
  if (!from._internal_clientid().empty()) {
    _this->_internal_set_clientid(from._internal_clientid());
  }
  if (from._internal_requestid() != 0) {
    _this->_internal_set_requestid(from._internal_requestid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PutAppendArgs::CopyFrom(const PutAppendArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftKVRpcProctoc.PutAppendArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PutAppendArgs::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PutAppendArgs::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PutAppendArgs::InternalSwap(PutAppendArgs* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_, &other->_impl_.op_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientid_, &other->_impl_.clientid_, arena);
        swap(_impl_.requestid_, other->_impl_.requestid_);
}

::google::protobuf::Metadata PutAppendArgs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kvServerRPC_2eproto_getter, &descriptor_table_kvServerRPC_2eproto_once,
      file_level_metadata_kvServerRPC_2eproto[2]);
}
// ===================================================================

class PutAppendReply::_Internal {
 public:
};

PutAppendReply::PutAppendReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftKVRpcProctoc.PutAppendReply)
}
inline PROTOBUF_NDEBUG_INLINE PutAppendReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : err_(arena, from.err_),
        _cached_size_{0} {}

PutAppendReply::PutAppendReply(
    ::google::protobuf::Arena* arena,
    const PutAppendReply& from)
    : ::google::protobuf::Message(arena) {
  PutAppendReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:raftKVRpcProctoc.PutAppendReply)
}
inline PROTOBUF_NDEBUG_INLINE PutAppendReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : err_(arena),
        _cached_size_{0} {}

inline void PutAppendReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PutAppendReply::~PutAppendReply() {
  // @@protoc_insertion_point(destructor:raftKVRpcProctoc.PutAppendReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PutAppendReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.err_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PutAppendReply::Clear() {
// @@protoc_insertion_point(message_clear_start:raftKVRpcProctoc.PutAppendReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.err_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PutAppendReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PutAppendReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PutAppendReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes Err = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PutAppendReply, _impl_.err_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes Err = 1;
    {PROTOBUF_FIELD_OFFSET(PutAppendReply, _impl_.err_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PutAppendReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftKVRpcProctoc.PutAppendReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes Err = 1;
  if (!this->_internal_err().empty()) {
    const std::string& _s = this->_internal_err();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftKVRpcProctoc.PutAppendReply)
  return target;
}

::size_t PutAppendReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftKVRpcProctoc.PutAppendReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Err = 1;
  if (!this->_internal_err().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_err());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PutAppendReply::_class_data_ = {
    PutAppendReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PutAppendReply::GetClassData() const {
  return &_class_data_;
}

void PutAppendReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PutAppendReply*>(&to_msg);
  auto& from = static_cast<const PutAppendReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftKVRpcProctoc.PutAppendReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_err().empty()) {
    _this->_internal_set_err(from._internal_err());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PutAppendReply::CopyFrom(const PutAppendReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftKVRpcProctoc.PutAppendReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PutAppendReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PutAppendReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PutAppendReply::InternalSwap(PutAppendReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.err_, &other->_impl_.err_, arena);
}

::google::protobuf::Metadata PutAppendReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kvServerRPC_2eproto_getter, &descriptor_table_kvServerRPC_2eproto_once,
      file_level_metadata_kvServerRPC_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace raftKVRpcProctoc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
