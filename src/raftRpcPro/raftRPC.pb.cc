// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raftRPC.proto

#include "raftRPC.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace raftRpcProctoc {

inline constexpr RequestVoteReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        votegranted_{false},
        votestate_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteReply::RequestVoteReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestVoteReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteReplyDefaultTypeInternal() {}
  union {
    RequestVoteReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteReplyDefaultTypeInternal _RequestVoteReply_default_instance_;

inline constexpr RequestVoteArgs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        candidateid_{0},
        lastlogindex_{0},
        lastlogterm_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteArgs::RequestVoteArgs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestVoteArgsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteArgsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteArgsDefaultTypeInternal() {}
  union {
    RequestVoteArgs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteArgsDefaultTypeInternal _RequestVoteArgs_default_instance_;

inline constexpr LogEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : command_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logterm_{0},
        logindex_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogEntry::LogEntry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LogEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntryDefaultTypeInternal() {}
  union {
    LogEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntryDefaultTypeInternal _LogEntry_default_instance_;

inline constexpr InstallSnapshotResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InstallSnapshotResponse::InstallSnapshotResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InstallSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstallSnapshotResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstallSnapshotResponseDefaultTypeInternal() {}
  union {
    InstallSnapshotResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstallSnapshotResponseDefaultTypeInternal _InstallSnapshotResponse_default_instance_;

inline constexpr InstallSnapshotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        leaderid_{0},
        term_{0},
        lastsnapshotincludeindex_{0},
        lastsnapshotincludeterm_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InstallSnapshotRequest::InstallSnapshotRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InstallSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstallSnapshotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstallSnapshotRequestDefaultTypeInternal() {}
  union {
    InstallSnapshotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstallSnapshotRequestDefaultTypeInternal _InstallSnapshotRequest_default_instance_;

inline constexpr AppendEntriesReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        success_{false},
        updatenextindex_{0},
        appstate_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AppendEntriesReply::AppendEntriesReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppendEntriesReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppendEntriesReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppendEntriesReplyDefaultTypeInternal() {}
  union {
    AppendEntriesReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppendEntriesReplyDefaultTypeInternal _AppendEntriesReply_default_instance_;

inline constexpr AppendEntriesArgs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        term_{0},
        leaderid_{0},
        prevlogindex_{0},
        prevlogterm_{0},
        leadercommit_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AppendEntriesArgs::AppendEntriesArgs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppendEntriesArgsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppendEntriesArgsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppendEntriesArgsDefaultTypeInternal() {}
  union {
    AppendEntriesArgs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppendEntriesArgsDefaultTypeInternal _AppendEntriesArgs_default_instance_;
}  // namespace raftRpcProctoc
static ::_pb::Metadata file_level_metadata_raftRPC_2eproto[7];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_raftRPC_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_raftRPC_2eproto = nullptr;
const ::uint32_t TableStruct_raftRPC_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::LogEntry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::LogEntry, _impl_.command_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::LogEntry, _impl_.logterm_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::LogEntry, _impl_.logindex_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesArgs, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesArgs, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesArgs, _impl_.leaderid_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesArgs, _impl_.prevlogindex_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesArgs, _impl_.prevlogterm_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesArgs, _impl_.entries_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesArgs, _impl_.leadercommit_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesReply, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesReply, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesReply, _impl_.updatenextindex_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::AppendEntriesReply, _impl_.appstate_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::RequestVoteArgs, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::RequestVoteArgs, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::RequestVoteArgs, _impl_.candidateid_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::RequestVoteArgs, _impl_.lastlogindex_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::RequestVoteArgs, _impl_.lastlogterm_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::RequestVoteReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::RequestVoteReply, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::RequestVoteReply, _impl_.votegranted_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::RequestVoteReply, _impl_.votestate_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::InstallSnapshotRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::InstallSnapshotRequest, _impl_.leaderid_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::InstallSnapshotRequest, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::InstallSnapshotRequest, _impl_.lastsnapshotincludeindex_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_),
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::InstallSnapshotRequest, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::InstallSnapshotResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpcProctoc::InstallSnapshotResponse, _impl_.term_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::raftRpcProctoc::LogEntry)},
        {11, -1, -1, sizeof(::raftRpcProctoc::AppendEntriesArgs)},
        {25, -1, -1, sizeof(::raftRpcProctoc::AppendEntriesReply)},
        {37, -1, -1, sizeof(::raftRpcProctoc::RequestVoteArgs)},
        {49, -1, -1, sizeof(::raftRpcProctoc::RequestVoteReply)},
        {60, -1, -1, sizeof(::raftRpcProctoc::InstallSnapshotRequest)},
        {73, -1, -1, sizeof(::raftRpcProctoc::InstallSnapshotResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::raftRpcProctoc::_LogEntry_default_instance_._instance,
    &::raftRpcProctoc::_AppendEntriesArgs_default_instance_._instance,
    &::raftRpcProctoc::_AppendEntriesReply_default_instance_._instance,
    &::raftRpcProctoc::_RequestVoteArgs_default_instance_._instance,
    &::raftRpcProctoc::_RequestVoteReply_default_instance_._instance,
    &::raftRpcProctoc::_InstallSnapshotRequest_default_instance_._instance,
    &::raftRpcProctoc::_InstallSnapshotResponse_default_instance_._instance,
};
const char descriptor_table_protodef_raftRPC_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rraftRPC.proto\022\016raftRpcProctoc\">\n\010LogEn"
    "try\022\017\n\007Command\030\001 \001(\014\022\017\n\007LogTerm\030\002 \001(\005\022\020\n"
    "\010LogIndex\030\003 \001(\005\"\237\001\n\021AppendEntriesArgs\022\014\n"
    "\004Term\030\001 \001(\005\022\020\n\010LeaderId\030\002 \001(\005\022\024\n\014PrevLog"
    "Index\030\003 \001(\005\022\023\n\013PrevLogTerm\030\004 \001(\005\022)\n\007Entr"
    "ies\030\005 \003(\0132\030.raftRpcProctoc.LogEntry\022\024\n\014L"
    "eaderCommit\030\006 \001(\005\"^\n\022AppendEntriesReply\022"
    "\014\n\004Term\030\001 \001(\005\022\017\n\007Success\030\002 \001(\010\022\027\n\017Update"
    "NextIndex\030\003 \001(\005\022\020\n\010AppState\030\004 \001(\005\"_\n\017Req"
    "uestVoteArgs\022\014\n\004Term\030\001 \001(\005\022\023\n\013CandidateI"
    "d\030\002 \001(\005\022\024\n\014LastLogIndex\030\003 \001(\005\022\023\n\013LastLog"
    "Term\030\004 \001(\005\"H\n\020RequestVoteReply\022\014\n\004Term\030\001"
    " \001(\005\022\023\n\013VoteGranted\030\002 \001(\010\022\021\n\tVoteState\030\003"
    " \001(\005\"\211\001\n\026InstallSnapshotRequest\022\020\n\010Leade"
    "rId\030\001 \001(\005\022\014\n\004Term\030\002 \001(\005\022 \n\030LastSnapShotI"
    "ncludeIndex\030\003 \001(\005\022\037\n\027LastSnapShotInclude"
    "Term\030\004 \001(\005\022\014\n\004Data\030\005 \001(\014\"\'\n\027InstallSnaps"
    "hotResponse\022\014\n\004Term\030\001 \001(\0052\227\002\n\007raftRpc\022V\n"
    "\rAppendEntries\022!.raftRpcProctoc.AppendEn"
    "triesArgs\032\".raftRpcProctoc.AppendEntries"
    "Reply\022b\n\017InstallSnapshot\022&.raftRpcProcto"
    "c.InstallSnapshotRequest\032\'.raftRpcProcto"
    "c.InstallSnapshotResponse\022P\n\013RequestVote"
    "\022\037.raftRpcProctoc.RequestVoteArgs\032 .raft"
    "RpcProctoc.RequestVoteReplyb\006proto3"
};
static ::absl::once_flag descriptor_table_raftRPC_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_raftRPC_2eproto = {
    false,
    false,
    995,
    descriptor_table_protodef_raftRPC_2eproto,
    "raftRPC.proto",
    &descriptor_table_raftRPC_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_raftRPC_2eproto::offsets,
    file_level_metadata_raftRPC_2eproto,
    file_level_enum_descriptors_raftRPC_2eproto,
    file_level_service_descriptors_raftRPC_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_raftRPC_2eproto_getter() {
  return &descriptor_table_raftRPC_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_raftRPC_2eproto(&descriptor_table_raftRPC_2eproto);
namespace raftRpcProctoc {
// ===================================================================

class LogEntry::_Internal {
 public:
};

LogEntry::LogEntry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpcProctoc.LogEntry)
}
inline PROTOBUF_NDEBUG_INLINE LogEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : command_(arena, from.command_),
        _cached_size_{0} {}

LogEntry::LogEntry(
    ::google::protobuf::Arena* arena,
    const LogEntry& from)
    : ::google::protobuf::Message(arena) {
  LogEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logterm_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, logterm_),
           offsetof(Impl_, logindex_) -
               offsetof(Impl_, logterm_) +
               sizeof(Impl_::logindex_));

  // @@protoc_insertion_point(copy_constructor:raftRpcProctoc.LogEntry)
}
inline PROTOBUF_NDEBUG_INLINE LogEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : command_(arena),
        _cached_size_{0} {}

inline void LogEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logterm_),
           0,
           offsetof(Impl_, logindex_) -
               offsetof(Impl_, logterm_) +
               sizeof(Impl_::logindex_));
}
LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:raftRpcProctoc.LogEntry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LogEntry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.command_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpcProctoc.LogEntry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.command_.ClearToEmpty();
  ::memset(&_impl_.logterm_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.logindex_) -
      reinterpret_cast<char*>(&_impl_.logterm_)) + sizeof(_impl_.logindex_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LogEntry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> LogEntry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LogEntry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes Command = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.command_)}},
    // int32 LogTerm = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LogEntry, _impl_.logterm_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.logterm_)}},
    // int32 LogIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LogEntry, _impl_.logindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.logindex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes Command = 1;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.command_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 LogTerm = 2;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.logterm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 LogIndex = 3;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.logindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LogEntry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpcProctoc.LogEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes Command = 1;
  if (!this->_internal_command().empty()) {
    const std::string& _s = this->_internal_command();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // int32 LogTerm = 2;
  if (this->_internal_logterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_logterm(), target);
  }

  // int32 LogIndex = 3;
  if (this->_internal_logindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_logindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpcProctoc.LogEntry)
  return target;
}

::size_t LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpcProctoc.LogEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Command = 1;
  if (!this->_internal_command().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_command());
  }

  // int32 LogTerm = 2;
  if (this->_internal_logterm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_logterm());
  }

  // int32 LogIndex = 3;
  if (this->_internal_logindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_logindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LogEntry::_class_data_ = {
    LogEntry::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LogEntry::GetClassData() const {
  return &_class_data_;
}

void LogEntry::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LogEntry*>(&to_msg);
  auto& from = static_cast<const LogEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpcProctoc.LogEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_command().empty()) {
    _this->_internal_set_command(from._internal_command());
  }
  if (from._internal_logterm() != 0) {
    _this->_internal_set_logterm(from._internal_logterm());
  }
  if (from._internal_logindex() != 0) {
    _this->_internal_set_logindex(from._internal_logindex());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpcProctoc.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LogEntry::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LogEntry::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LogEntry::InternalSwap(LogEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_, &other->_impl_.command_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.logindex_)
      + sizeof(LogEntry::_impl_.logindex_)
      - PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.logterm_)>(
          reinterpret_cast<char*>(&_impl_.logterm_),
          reinterpret_cast<char*>(&other->_impl_.logterm_));
}

::google::protobuf::Metadata LogEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRPC_2eproto_getter, &descriptor_table_raftRPC_2eproto_once,
      file_level_metadata_raftRPC_2eproto[0]);
}
// ===================================================================

class AppendEntriesArgs::_Internal {
 public:
};

AppendEntriesArgs::AppendEntriesArgs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpcProctoc.AppendEntriesArgs)
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesArgs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

AppendEntriesArgs::AppendEntriesArgs(
    ::google::protobuf::Arena* arena,
    const AppendEntriesArgs& from)
    : ::google::protobuf::Message(arena) {
  AppendEntriesArgs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, term_),
           offsetof(Impl_, leadercommit_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::leadercommit_));

  // @@protoc_insertion_point(copy_constructor:raftRpcProctoc.AppendEntriesArgs)
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesArgs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void AppendEntriesArgs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, leadercommit_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::leadercommit_));
}
AppendEntriesArgs::~AppendEntriesArgs() {
  // @@protoc_insertion_point(destructor:raftRpcProctoc.AppendEntriesArgs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppendEntriesArgs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppendEntriesArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpcProctoc.AppendEntriesArgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.leadercommit_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.leadercommit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppendEntriesArgs::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> AppendEntriesArgs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AppendEntriesArgs_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 Term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesArgs, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.term_)}},
    // int32 LeaderId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesArgs, _impl_.leaderid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.leaderid_)}},
    // int32 PrevLogIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesArgs, _impl_.prevlogindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.prevlogindex_)}},
    // int32 PrevLogTerm = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesArgs, _impl_.prevlogterm_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.prevlogterm_)}},
    // repeated .raftRpcProctoc.LogEntry Entries = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.entries_)}},
    // int32 LeaderCommit = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesArgs, _impl_.leadercommit_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.leadercommit_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 Term = 1;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 LeaderId = 2;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.leaderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 PrevLogIndex = 3;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.prevlogindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 PrevLogTerm = 4;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.prevlogterm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .raftRpcProctoc.LogEntry Entries = 5;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 LeaderCommit = 6;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.leadercommit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::raftRpcProctoc::LogEntry>()},
  }}, {{
  }},
};

::uint8_t* AppendEntriesArgs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpcProctoc.AppendEntriesArgs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // int32 LeaderId = 2;
  if (this->_internal_leaderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_leaderid(), target);
  }

  // int32 PrevLogIndex = 3;
  if (this->_internal_prevlogindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_prevlogindex(), target);
  }

  // int32 PrevLogTerm = 4;
  if (this->_internal_prevlogterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_prevlogterm(), target);
  }

  // repeated .raftRpcProctoc.LogEntry Entries = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 LeaderCommit = 6;
  if (this->_internal_leadercommit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_leadercommit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpcProctoc.AppendEntriesArgs)
  return target;
}

::size_t AppendEntriesArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpcProctoc.AppendEntriesArgs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .raftRpcProctoc.LogEntry Entries = 5;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_internal_entries()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // int32 LeaderId = 2;
  if (this->_internal_leaderid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_leaderid());
  }

  // int32 PrevLogIndex = 3;
  if (this->_internal_prevlogindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prevlogindex());
  }

  // int32 PrevLogTerm = 4;
  if (this->_internal_prevlogterm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prevlogterm());
  }

  // int32 LeaderCommit = 6;
  if (this->_internal_leadercommit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_leadercommit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppendEntriesArgs::_class_data_ = {
    AppendEntriesArgs::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppendEntriesArgs::GetClassData() const {
  return &_class_data_;
}

void AppendEntriesArgs::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppendEntriesArgs*>(&to_msg);
  auto& from = static_cast<const AppendEntriesArgs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpcProctoc.AppendEntriesArgs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_leaderid() != 0) {
    _this->_internal_set_leaderid(from._internal_leaderid());
  }
  if (from._internal_prevlogindex() != 0) {
    _this->_internal_set_prevlogindex(from._internal_prevlogindex());
  }
  if (from._internal_prevlogterm() != 0) {
    _this->_internal_set_prevlogterm(from._internal_prevlogterm());
  }
  if (from._internal_leadercommit() != 0) {
    _this->_internal_set_leadercommit(from._internal_leadercommit());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppendEntriesArgs::CopyFrom(const AppendEntriesArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpcProctoc.AppendEntriesArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppendEntriesArgs::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppendEntriesArgs::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppendEntriesArgs::InternalSwap(AppendEntriesArgs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.leadercommit_)
      + sizeof(AppendEntriesArgs::_impl_.leadercommit_)
      - PROTOBUF_FIELD_OFFSET(AppendEntriesArgs, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata AppendEntriesArgs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRPC_2eproto_getter, &descriptor_table_raftRPC_2eproto_once,
      file_level_metadata_raftRPC_2eproto[1]);
}
// ===================================================================

class AppendEntriesReply::_Internal {
 public:
};

AppendEntriesReply::AppendEntriesReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpcProctoc.AppendEntriesReply)
}
AppendEntriesReply::AppendEntriesReply(
    ::google::protobuf::Arena* arena, const AppendEntriesReply& from)
    : AppendEntriesReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppendEntriesReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, appstate_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::appstate_));
}
AppendEntriesReply::~AppendEntriesReply() {
  // @@protoc_insertion_point(destructor:raftRpcProctoc.AppendEntriesReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppendEntriesReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppendEntriesReply::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpcProctoc.AppendEntriesReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.appstate_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.appstate_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppendEntriesReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> AppendEntriesReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppendEntriesReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 AppState = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesReply, _impl_.appstate_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.appstate_)}},
    // int32 Term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesReply, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.term_)}},
    // bool Success = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppendEntriesReply, _impl_.success_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.success_)}},
    // int32 UpdateNextIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesReply, _impl_.updatenextindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.updatenextindex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 Term = 1;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool Success = 2;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 UpdateNextIndex = 3;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.updatenextindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 AppState = 4;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.appstate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppendEntriesReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpcProctoc.AppendEntriesReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // bool Success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_success(), target);
  }

  // int32 UpdateNextIndex = 3;
  if (this->_internal_updatenextindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_updatenextindex(), target);
  }

  // int32 AppState = 4;
  if (this->_internal_appstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_appstate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpcProctoc.AppendEntriesReply)
  return target;
}

::size_t AppendEntriesReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpcProctoc.AppendEntriesReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // bool Success = 2;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  // int32 UpdateNextIndex = 3;
  if (this->_internal_updatenextindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_updatenextindex());
  }

  // int32 AppState = 4;
  if (this->_internal_appstate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_appstate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppendEntriesReply::_class_data_ = {
    AppendEntriesReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppendEntriesReply::GetClassData() const {
  return &_class_data_;
}

void AppendEntriesReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppendEntriesReply*>(&to_msg);
  auto& from = static_cast<const AppendEntriesReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpcProctoc.AppendEntriesReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  if (from._internal_updatenextindex() != 0) {
    _this->_internal_set_updatenextindex(from._internal_updatenextindex());
  }
  if (from._internal_appstate() != 0) {
    _this->_internal_set_appstate(from._internal_appstate());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppendEntriesReply::CopyFrom(const AppendEntriesReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpcProctoc.AppendEntriesReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppendEntriesReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppendEntriesReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppendEntriesReply::InternalSwap(AppendEntriesReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.appstate_)
      + sizeof(AppendEntriesReply::_impl_.appstate_)
      - PROTOBUF_FIELD_OFFSET(AppendEntriesReply, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata AppendEntriesReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRPC_2eproto_getter, &descriptor_table_raftRPC_2eproto_once,
      file_level_metadata_raftRPC_2eproto[2]);
}
// ===================================================================

class RequestVoteArgs::_Internal {
 public:
};

RequestVoteArgs::RequestVoteArgs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpcProctoc.RequestVoteArgs)
}
RequestVoteArgs::RequestVoteArgs(
    ::google::protobuf::Arena* arena, const RequestVoteArgs& from)
    : RequestVoteArgs(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteArgs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestVoteArgs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, lastlogterm_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::lastlogterm_));
}
RequestVoteArgs::~RequestVoteArgs() {
  // @@protoc_insertion_point(destructor:raftRpcProctoc.RequestVoteArgs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestVoteArgs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RequestVoteArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpcProctoc.RequestVoteArgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lastlogterm_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.lastlogterm_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestVoteArgs::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> RequestVoteArgs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RequestVoteArgs_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 LastLogTerm = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteArgs, _impl_.lastlogterm_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogterm_)}},
    // int32 Term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteArgs, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.term_)}},
    // int32 CandidateId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteArgs, _impl_.candidateid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.candidateid_)}},
    // int32 LastLogIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteArgs, _impl_.lastlogindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogindex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 Term = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 CandidateId = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.candidateid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 LastLogIndex = 3;
    {PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 LastLogTerm = 4;
    {PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogterm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RequestVoteArgs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpcProctoc.RequestVoteArgs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // int32 CandidateId = 2;
  if (this->_internal_candidateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_candidateid(), target);
  }

  // int32 LastLogIndex = 3;
  if (this->_internal_lastlogindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_lastlogindex(), target);
  }

  // int32 LastLogTerm = 4;
  if (this->_internal_lastlogterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_lastlogterm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpcProctoc.RequestVoteArgs)
  return target;
}

::size_t RequestVoteArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpcProctoc.RequestVoteArgs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // int32 CandidateId = 2;
  if (this->_internal_candidateid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_candidateid());
  }

  // int32 LastLogIndex = 3;
  if (this->_internal_lastlogindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastlogindex());
  }

  // int32 LastLogTerm = 4;
  if (this->_internal_lastlogterm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastlogterm());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RequestVoteArgs::_class_data_ = {
    RequestVoteArgs::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RequestVoteArgs::GetClassData() const {
  return &_class_data_;
}

void RequestVoteArgs::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RequestVoteArgs*>(&to_msg);
  auto& from = static_cast<const RequestVoteArgs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpcProctoc.RequestVoteArgs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_candidateid() != 0) {
    _this->_internal_set_candidateid(from._internal_candidateid());
  }
  if (from._internal_lastlogindex() != 0) {
    _this->_internal_set_lastlogindex(from._internal_lastlogindex());
  }
  if (from._internal_lastlogterm() != 0) {
    _this->_internal_set_lastlogterm(from._internal_lastlogterm());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteArgs::CopyFrom(const RequestVoteArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpcProctoc.RequestVoteArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestVoteArgs::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RequestVoteArgs::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RequestVoteArgs::InternalSwap(RequestVoteArgs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogterm_)
      + sizeof(RequestVoteArgs::_impl_.lastlogterm_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata RequestVoteArgs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRPC_2eproto_getter, &descriptor_table_raftRPC_2eproto_once,
      file_level_metadata_raftRPC_2eproto[3]);
}
// ===================================================================

class RequestVoteReply::_Internal {
 public:
};

RequestVoteReply::RequestVoteReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpcProctoc.RequestVoteReply)
}
RequestVoteReply::RequestVoteReply(
    ::google::protobuf::Arena* arena, const RequestVoteReply& from)
    : RequestVoteReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestVoteReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, votestate_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::votestate_));
}
RequestVoteReply::~RequestVoteReply() {
  // @@protoc_insertion_point(destructor:raftRpcProctoc.RequestVoteReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestVoteReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RequestVoteReply::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpcProctoc.RequestVoteReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.votestate_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.votestate_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestVoteReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RequestVoteReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RequestVoteReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 Term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteReply, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.term_)}},
    // bool VoteGranted = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RequestVoteReply, _impl_.votegranted_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votegranted_)}},
    // int32 VoteState = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteReply, _impl_.votestate_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votestate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 Term = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool VoteGranted = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votegranted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 VoteState = 3;
    {PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votestate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RequestVoteReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpcProctoc.RequestVoteReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // bool VoteGranted = 2;
  if (this->_internal_votegranted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_votegranted(), target);
  }

  // int32 VoteState = 3;
  if (this->_internal_votestate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_votestate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpcProctoc.RequestVoteReply)
  return target;
}

::size_t RequestVoteReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpcProctoc.RequestVoteReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // bool VoteGranted = 2;
  if (this->_internal_votegranted() != 0) {
    total_size += 2;
  }

  // int32 VoteState = 3;
  if (this->_internal_votestate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_votestate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RequestVoteReply::_class_data_ = {
    RequestVoteReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RequestVoteReply::GetClassData() const {
  return &_class_data_;
}

void RequestVoteReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RequestVoteReply*>(&to_msg);
  auto& from = static_cast<const RequestVoteReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpcProctoc.RequestVoteReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_votegranted() != 0) {
    _this->_internal_set_votegranted(from._internal_votegranted());
  }
  if (from._internal_votestate() != 0) {
    _this->_internal_set_votestate(from._internal_votestate());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteReply::CopyFrom(const RequestVoteReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpcProctoc.RequestVoteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestVoteReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RequestVoteReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RequestVoteReply::InternalSwap(RequestVoteReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votestate_)
      + sizeof(RequestVoteReply::_impl_.votestate_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata RequestVoteReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRPC_2eproto_getter, &descriptor_table_raftRPC_2eproto_once,
      file_level_metadata_raftRPC_2eproto[4]);
}
// ===================================================================

class InstallSnapshotRequest::_Internal {
 public:
};

InstallSnapshotRequest::InstallSnapshotRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpcProctoc.InstallSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

InstallSnapshotRequest::InstallSnapshotRequest(
    ::google::protobuf::Arena* arena,
    const InstallSnapshotRequest& from)
    : ::google::protobuf::Message(arena) {
  InstallSnapshotRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, leaderid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, leaderid_),
           offsetof(Impl_, lastsnapshotincludeterm_) -
               offsetof(Impl_, leaderid_) +
               sizeof(Impl_::lastsnapshotincludeterm_));

  // @@protoc_insertion_point(copy_constructor:raftRpcProctoc.InstallSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void InstallSnapshotRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, leaderid_),
           0,
           offsetof(Impl_, lastsnapshotincludeterm_) -
               offsetof(Impl_, leaderid_) +
               sizeof(Impl_::lastsnapshotincludeterm_));
}
InstallSnapshotRequest::~InstallSnapshotRequest() {
  // @@protoc_insertion_point(destructor:raftRpcProctoc.InstallSnapshotRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InstallSnapshotRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InstallSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpcProctoc.InstallSnapshotRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.leaderid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lastsnapshotincludeterm_) -
      reinterpret_cast<char*>(&_impl_.leaderid_)) + sizeof(_impl_.lastsnapshotincludeterm_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InstallSnapshotRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> InstallSnapshotRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_InstallSnapshotRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 LeaderId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotRequest, _impl_.leaderid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.leaderid_)}},
    // int32 Term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotRequest, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.term_)}},
    // int32 LastSnapShotIncludeIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotRequest, _impl_.lastsnapshotincludeindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeindex_)}},
    // int32 LastSnapShotIncludeTerm = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_)}},
    // bytes Data = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 LeaderId = 1;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.leaderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 Term = 2;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 LastSnapShotIncludeIndex = 3;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 LastSnapShotIncludeTerm = 4;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes Data = 5;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* InstallSnapshotRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpcProctoc.InstallSnapshotRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 LeaderId = 1;
  if (this->_internal_leaderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_leaderid(), target);
  }

  // int32 Term = 2;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_term(), target);
  }

  // int32 LastSnapShotIncludeIndex = 3;
  if (this->_internal_lastsnapshotincludeindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_lastsnapshotincludeindex(), target);
  }

  // int32 LastSnapShotIncludeTerm = 4;
  if (this->_internal_lastsnapshotincludeterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_lastsnapshotincludeterm(), target);
  }

  // bytes Data = 5;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpcProctoc.InstallSnapshotRequest)
  return target;
}

::size_t InstallSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpcProctoc.InstallSnapshotRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Data = 5;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // int32 LeaderId = 1;
  if (this->_internal_leaderid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_leaderid());
  }

  // int32 Term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // int32 LastSnapShotIncludeIndex = 3;
  if (this->_internal_lastsnapshotincludeindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastsnapshotincludeindex());
  }

  // int32 LastSnapShotIncludeTerm = 4;
  if (this->_internal_lastsnapshotincludeterm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastsnapshotincludeterm());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InstallSnapshotRequest::_class_data_ = {
    InstallSnapshotRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InstallSnapshotRequest::GetClassData() const {
  return &_class_data_;
}

void InstallSnapshotRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InstallSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const InstallSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpcProctoc.InstallSnapshotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_leaderid() != 0) {
    _this->_internal_set_leaderid(from._internal_leaderid());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_lastsnapshotincludeindex() != 0) {
    _this->_internal_set_lastsnapshotincludeindex(from._internal_lastsnapshotincludeindex());
  }
  if (from._internal_lastsnapshotincludeterm() != 0) {
    _this->_internal_set_lastsnapshotincludeterm(from._internal_lastsnapshotincludeterm());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstallSnapshotRequest::CopyFrom(const InstallSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpcProctoc.InstallSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstallSnapshotRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InstallSnapshotRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InstallSnapshotRequest::InternalSwap(InstallSnapshotRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_)
      + sizeof(InstallSnapshotRequest::_impl_.lastsnapshotincludeterm_)
      - PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.leaderid_)>(
          reinterpret_cast<char*>(&_impl_.leaderid_),
          reinterpret_cast<char*>(&other->_impl_.leaderid_));
}

::google::protobuf::Metadata InstallSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRPC_2eproto_getter, &descriptor_table_raftRPC_2eproto_once,
      file_level_metadata_raftRPC_2eproto[5]);
}
// ===================================================================

class InstallSnapshotResponse::_Internal {
 public:
};

InstallSnapshotResponse::InstallSnapshotResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpcProctoc.InstallSnapshotResponse)
}
InstallSnapshotResponse::InstallSnapshotResponse(
    ::google::protobuf::Arena* arena, const InstallSnapshotResponse& from)
    : InstallSnapshotResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void InstallSnapshotResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.term_ = {};
}
InstallSnapshotResponse::~InstallSnapshotResponse() {
  // @@protoc_insertion_point(destructor:raftRpcProctoc.InstallSnapshotResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InstallSnapshotResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InstallSnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpcProctoc.InstallSnapshotResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.term_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InstallSnapshotResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> InstallSnapshotResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_InstallSnapshotResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 Term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotResponse, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.term_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 Term = 1;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* InstallSnapshotResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpcProctoc.InstallSnapshotResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpcProctoc.InstallSnapshotResponse)
  return target;
}

::size_t InstallSnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpcProctoc.InstallSnapshotResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InstallSnapshotResponse::_class_data_ = {
    InstallSnapshotResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InstallSnapshotResponse::GetClassData() const {
  return &_class_data_;
}

void InstallSnapshotResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InstallSnapshotResponse*>(&to_msg);
  auto& from = static_cast<const InstallSnapshotResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpcProctoc.InstallSnapshotResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstallSnapshotResponse::CopyFrom(const InstallSnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpcProctoc.InstallSnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstallSnapshotResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InstallSnapshotResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InstallSnapshotResponse::InternalSwap(InstallSnapshotResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.term_, other->_impl_.term_);
}

::google::protobuf::Metadata InstallSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRPC_2eproto_getter, &descriptor_table_raftRPC_2eproto_once,
      file_level_metadata_raftRPC_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace raftRpcProctoc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
